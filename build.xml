<project xmlns:ivy="antlib:org.apache.ivy.ant"
	default="jar" basedir="." name="HSQL Oddball">

	<taskdef resource="org/apache/ivy/ant/antlib.xml"
	                 uri="antlib:org.apache.ivy.ant" 
		classpath="../oj-assembly/antlibs/ivy-2.5.0.jar"/>
	
	<!-- =================================================================== -->
	<!-- Initialization target                                               -->
	<!-- =================================================================== -->
	<target name="init">

		<tstamp/>

		<!-- =================================================================== -->
		<!-- Properties                                                          -->
		<!-- =================================================================== -->

		<property file="../oj-assembly/version.properties"/>
		
		<property name="Name"     value="HSQL Oddball"/>
		<property name="name"     value="oj-hsql"/>
		<property name="build.version"  value="${project.version}"/>

		<property name="oddjob.src"          value="../oddjob"/>
		
		<echo message="--------------------------------------------------------------"/>
		<echo message="            ${Name} ${build.version}                                "/>
		<echo message="--------------------------------------------------------------"/>
		<echo message="Building with ${ant.version}"/>
		<echo message="using build file ${ant.file}"/>
		<echo message="oddjob.src is ${oddjob.src}"/>
		<echo message="--------------------------------------------------------------"/>

		<property name="debug"          value="on"/>
		<property name="optimize"       value="off"/>
		<property name="deprecation"    value="off"/>
		<property name="nowarn"         value="on"/>
		<!-- <property name="build.compiler" value="classic"/> -->

		<property name="src.dir"      		value="./src"/>
		<property name="main.java"        	value="${src.dir}/main/java"/>
		<property name="main.resources"   	value="${src.dir}/main/resources"/>
		<property name="test.java"        	value="${src.dir}/test/java"/>
		<property name="test.resources"   	value="${src.dir}/test/resources"/>

		<property name="build.dir"       	value="./build"/>
		<property name="build.src"       	value="${build.dir}/src"/>
		<property name="build.classes"   	value="${build.dir}/classes"/>

		<property name="oddball.dir"		value="${build.dir}/oddball"/>
		<property name="oddball.lib"    	value="${oddball.dir}/lib"/>

		<property name="build.tests" 		value="${build.dir}/test-classes"/>

		<property name="test.reports" 		value="${build.dir}/test-reports"/>
			
		<property name="jar.name"       	value="${name}-${build.version}.jar"/>

		<filter token="Name"    value="${Name}"/>
		<filter token="name"    value="${name}"/>
		<filter token="version" value="${build.version}"/>
		<filter token="date"    value="${TODAY}"/>
		<filter token="log"     value="true"/>
		<filter token="verbose" value="true"/>
		<filter token="reference" value="../reference"/>
		<filter token="javadoc" value="../api"/>
		<filter token="userguide" value="../userguide"/>
		<filter token="devguide" value="../devguide"/>

	</target>

	<!-- =================================================================== -->
	<!-- Prepare for the build                                               -->
	<!-- =================================================================== -->
	<target name="prepare" depends="init">

		<mkdir dir="${build.dir}"/>

		<ivy:cachepath pathid="default-cachepath" conf="default" />

		<ivy:cachepath pathid="provided-cachepath" conf="provided" />
				
		<ivy:cachepath pathid="test-cachepath" conf="test" />
			
		<path id="classpath">
			<path refid="default-cachepath"/>
			<path refid="provided-cachepath"/>
		</path>

		<path id="test-classpath">
			<pathelement path="${build.classes}" />
			<path refid="test-cachepath"/>
		</path>
		
	</target>

	<!-- =================================================================== -->
	<!-- Prepares the source code                                            -->
	<!-- =================================================================== -->

	<target name="prepare-src-main" depends="prepare">

		<mkdir dir="${build.src}"/>
		<mkdir dir="${build.classes}"/>

		<copy todir="${build.src}" filtering="on">
			<fileset dir="${main.java}"/>
		</copy>

	</target>


	<!-- =================================================================== -->
	<!-- Compiles the source directory                                       -->
	<!-- =================================================================== -->
	<target name="compile" depends="prepare-src-main"
          description="Compiles the source code">

		<copy todir="${build.classes}">
			<fileset dir="${main.resources}"/>
		</copy>

		<echo message="Compiling with Java ${ant.java.version}, debug ${debug}, optimize ${optimize}, deprecation ${deprecation}"/>

		<javac srcdir="${build.src}"
           destdir="${build.classes}"
           debug="${debug}"
           optimize="${optimize}"
           deprecation="${deprecation}"
           nowarn="${nowarn}">
			<classpath refid="classpath"/>
		</javac>
	</target>

	<!-- =================================================================== -->
	<!-- Creates the jar file                                                -->
	<!-- =================================================================== -->
	<target name="jar" depends="compile-tests" description="Generates the jar packages">

		<mkdir dir="${oddball.dir}"/>

		<jar destfile="${oddball.lib}/${jar.name}"
			 basedir="${build.classes}">
			<metainf dir=".">
				<include name="LICENSE.txt"/>
				<include name="NOTICE.txt"/>
			</metainf>
		</jar>

		<ivy:retrieve pattern="${oddball.lib}/[artifact]-[revision].[ext]" conf="default" />
		
	</target>

	<!-- =================================================================== -->
	<!-- Test targets                                                       -->
	<!-- =================================================================== -->
	
	<target name="compile-tests" depends="compile" description="Compile jUnit tests">

		<copy todir="${build.tests}" filtering="off">
			<fileset dir="${test.resources}"/>
		</copy>
		
		<!-- Compile tests -->
		<javac srcdir="${test.java}"
            destdir="${build.tests}"
            debug="${debug}"
            optimize="${optimize}"
            deprecation="${deprecation}">
			<classpath>
				<pathelement path="${build.classes}" />
				<path refid="test-classpath"/>
			</classpath>
		</javac>

	</target>

	<target name="all-tests" depends="jar" description="Perform jUnit tests">
		<mkdir dir="${test.reports}"/>
		
		<junit printsummary="yes" haltonfailure="no" 
				failureproperty="junit.failure" fork="yes" forkMode="once">
			<classpath>
				<pathelement location="${build.tests}" />
			</classpath>
			<classpath refid="test-classpath"/>
			<batchtest todir="${test.reports}">
				<fileset dir="${build.tests}">
					<include name="**/test/*TestCase.class"/>
					<include name="**/*Test.class" />
					<exclude name="**/AllTest.class" />
					<exclude name="**/*$$*Test.class" />
				</fileset>
			</batchtest>
			<formatter type="xml"/>
			<sysproperty key="basedir" value="${basedir}"/>
			<sysproperty key="oddjob.home" value="${oddjob.home}"/>
			<sysproperty key="ant.file" value="${ant.file}"/>
		</junit>
		
		<junitreport todir="${test.reports}">
			<fileset dir="${test.reports}">
		    	<include name="TEST-*.xml"/>
			</fileset>
		    <report todir="${test.reports}"/>
		</junitreport>		
		
		<fail if="junit.failure" message="Unit test(s) failed. See reports in ${test.reports}."/>	
	</target>

	<target name="single-test" depends="jar" description="Single JUnit test">

		<junit printsummary="yes" haltonfailure="yes" fork="yes">
			<classpath>
				<pathelement location="${build.tests}" />
			</classpath>
			<classpath refid="test-classpath"/>
			<formatter type="plain" usefile="no" />
			<test name="${junit.test}"/>
			<sysproperty key="basedir" value="${basedir}"/>
			<sysproperty key="oddjob.home" value="${oddjob.home}"/>
			<sysproperty key="ant.file" value="${ant.file}"/>
		</junit>
	</target>
	
	<!-- =================================================================== -->
	<!-- Publish the jars in local ivy                                       -->
	<!-- =================================================================== -->
	<target name="install" depends="jar">
		
	</target>
	
	<!-- =================================================================== -->
	<!-- Prepares the source distribution                                    -->
	<!-- =================================================================== -->
	<target name="dist-src" depends="init" if="dist.src.dir"
          description="Prepares the source distribution">

		<property name="to.dir" value="${dist.src.dir}/${name}"/>
		
		<copy todir="${to.dir}/src" filtering="off">
			<fileset dir="${src.dir}"/>
		</copy>

		<copy todir="${to.dir}">
			<fileset dir=".">
				<include name="build.xml"/>
                <include name="ivy.xml"/>
                <include name="ivysettings.xml"/>
				<include name="LICENSE.txt"/>
				<include name="NOTICE.txt"/>
				<include name="README.md"/>
				<include name="pom.xml"/>
			</fileset>
		</copy>

	</target>

	<!-- =================================================================== -->
	<!-- Prepares the binary distribution                                    -->
	<!-- =================================================================== -->
	<target name="dist-bin" depends="jar" if="dist.bin.dir"
			description="Prepares the binary distribution.">
		
		<property name="to.dir" value="${dist.bin.dir}/oddballs/${name}"/>

		<copy todir="${to.dir}">
			<fileset dir="${oddball.dir}"/>
		</copy>

	</target>
	
	<!-- =================================================================== -->
	<!-- Maven Targets			                                     -->
	<!-- =================================================================== -->
		
	<target name="maven-install"
			description="Not yet implemented">
	</target>
	
    <target name="maven-deploy" 
    	description="Not yet implemented">
    </target>
	
	<target name="maven-stage" 
		description="Not yet implemented">
	</target>
	
	<!-- =================================================================== -->
	<!-- Clean targets                                                       -->
	<!-- =================================================================== -->
	<target name="clean" depends="init" description="Cleans the build directories">
		<delete dir="${build.dir}"/>
	</target>

</project>

<!-- End of file -->
